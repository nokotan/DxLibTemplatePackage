name: Visual Studio Extension for DxLib Windows Desktop

on:
  [ push, pull_request ]

jobs:

  build:
    strategy:
        matrix:
          config:
            - name: vs2022
              runs-on: windows-2022
              msbuild-path: "C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\MSBuild\\Current\\bin"

    if: ${{ !contains(github.event.head_commit.message, '[ci skip]') }}
    runs-on: ${{ matrix.config.runs-on }}

    env:
      Solution_Name: DxLibTemplate.sln
      MSBuild_Path: ${{ matrix.config.msbuild-path }}


    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Setup Nuget
      uses: nuget/setup-nuget@v1
      with:
        nuget-version: '5.x'

    - name: Restore Nuget package
      run: nuget restore $env:Solution_Name
      
    - name: Build the application
      run: |
        Set-Item Env:Path "$env:MSBuild_Path;$env:Path"
        msbuild $env:Solution_Name /p:Configuration="Release"
    
    - name: Save Package
      uses: actions/upload-artifact@v2
      with:
        name: DxLib.Template.${{ matrix.config.name }}
        path: .\DxLibProjectPackage\bin\Release\*.vsix  

    - name: Save Package (C#)
      uses: actions/upload-artifact@v2
      with:
        name: DxLib.CSharp.Template.${{ matrix.config.name }}
        path: .\DxLibCSharpProjectPackage\bin\Release\*.vsix  
 
  deploy:

    if: ${{ contains(github.ref, 'tags/v') }}
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}

      - name: Restore Bundles
        uses: actions/download-artifact@v2
        with:
          name: DxLib.Template.vs2022
          path: .

      - name: Upload Release Asset
        id: upload-package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: DxLibProjectPackage.vsix
          asset_name: DxLibProjectPackage.vsix
          asset_content_type: application/vsix

      - name: Restore Bundles (C#)
        uses: actions/download-artifact@v2
        with:
          name: DxLib.CSharp.Template.vs2022
          path: .

      - name: Upload Release Asset (C#)
        id: upload-package-csharp
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: DxLibSharpProjectPackage.vsix
          asset_name: DxLibSharpProjectPackage.vsix
          asset_content_type: application/vsix
